@model FormulierEnAanvraagModel; 

@{
    ViewData["Title"] = "OnDemand";
    List<TalkModel> talks = new List<TalkModel>();
    ApiController api = new ApiController();
    await api.TalkAPI();
    talks = api.talks;
    int number = 0;
    string id = "1" + number;
 
}

<link rel="stylesheet" href="~/css/_OnDemand_.css" />
<link rle="stylesheet" href="https://use.fontawesome.com/release/v5.4.1/css/all.css" />

<script src="~/js/site.js" asp-append-version="true"></script>


<body>
    <div class="topButton">
        <a class="btn buttonTop" data-toggle="collapse" data-target="#Formulier">
        <p>Talk Aanvragen</p></a>
    </div>
    <div class="collapse" id="Formulier">
        <div class="formulier">
            @using (Html.BeginForm("OnDemand", "Home", FormMethod.Post))
            {
                <h5>Voorkeursdag: </h5> @Html.EditorFor(m => m.form.preferredDateTime, new { @type = "date", @required = "required" }) <br />
                @Html.ValidationSummary()
                <h5>Bedrijfsnaam: </h5> @Html.TextBoxFor(m => m.form.companyName, new { @required = "required" }) <br />
                <h5>Aantal mensen aanwezig: </h5> @Html.TextBoxFor(m => m.form.amountOfPeople, new { @type = "number", min = 1, max = 100, @required = "required" }) <br />
                <h5>Tribe: </h5> @Html.DropDownListFor(m => m.form.tribe.Title, new SelectList(Enum.GetValues(typeof(Tribes)))) <br />
                <h5>Tribe-Beschrijving: </h5> @Html.EditorFor(m => m.form.tribe.Description) <br />
                <h5>Opmerking: </h5> @Html.EditorFor(m => m.form.comment) <br />
                <h5>Email: </h5> @Html.TextBoxFor(m => m.form.contactEmail, new { @type = "mail", @required = "required" }) <br />
                <h5>Telefoon: </h5> @Html.TextBoxFor(m => m.form.phoneNumber, new { @required = "required" }) <br /><br />
                <input type="submit" value="Vraag aan" />
            }
        </div>
    </div>

    <div class="talks">

        @foreach (TalkModel talk in talks)
        {
            string thumbnailUrl = "https://localhost:6001" + talk.thumbnail.Url;
            // na de || moet eigenijk weg omdat deze niet published zijn.
            if (talk.Type==1 && talk.Status==1|| talk.Type == 1 && talk.Status==0)
            {
            <div class="container talk">
                <h1>@talk.title</h1>
                <div class="row talkMiddle">
                    <p class="talkDesc">@talk.description</p>
                    <img class="talkThumbnail" src="@thumbnailUrl" />
                </div>
                <div class="row talkBottom">
                    <h2 class="talkTribe">@talk.Tribe.Title</h2>
                    <button class="btn btn-primary btnAanvraag" data-toggle="collapse" data-target="#Aanvragen">Toegang Aanvragen</button>
                </div>
                <div class="collapse" id="Aanvragen">
                    <div class="formulier">
                        @using (Html.BeginForm("Aanvragen", "Home", FormMethod.Post))
                        {

                            <h5>Email: </h5> @Html.TextBoxFor(m => m.form.contactEmail, new { @type = "mail", @required = "required" }) <br />
                            <h5>Bedrijfsnaam: </h5> @Html.TextBoxFor(m => m.form.companyName) <br />
                            <h5>Rol: </h5> @Html.EditorFor(m => m.form.comment) <br />
                            <h5>Telefoon: </h5> @Html.TextBoxFor(m => m.form.phoneNumber) <br /><br />
                            <input type="submit" value="Vraag aan" /><br />
                        }
                    </div>
                </div>

            </div>
            }
        }
    </div>
</body>
