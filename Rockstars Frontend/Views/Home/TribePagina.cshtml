@model FormulierEnAanvraagModel
@{
    ViewData["Title"] = "TribePagina";
    List<Tribe> Tribes = new List<Tribe>();
    ApiController api = new ApiController();
    await api.TribePaginaAPI();
    Tribes = api.AllTribes;
    Tribe Tribeso = new Tribe();
    foreach (Tribe ar in Tribes)
    {

        Tribeso = ar;

    }
    List<ArtikelModel> artikelen = new List<ArtikelModel>();
    List<User> tribeleads = new List<User>();
    List<TalkModel> webinars = new List<TalkModel>();
    List<ArtikelModel> drieartikelen = new List<ArtikelModel>();
    List<TalkModel> driewebinars = new List<TalkModel>();
    ApiController api2 = new ApiController();
    await api2.ArtikelPaginaAPI();
    artikelen = api2.artikelen;
    await api2.TalkAPI();
    webinars = api2.talks;
    await api2.TribeleadsAPI();
    tribeleads = api2.Tribeleads;
    int i = 0;
    int w = 0;
    FormulierModel form = new FormulierModel();
}

<link rel="stylesheet" href="~/css/TribePagina.css" />
<link rel="stylesheet" href="~/css/_ArtikelPagina.css" />
<div>
    <a class="backButton" asp-controller="Home" asp-action="TribeOverzicht">Terug</a>
</div>
<div style="width: 100%; border-bottom: solid 2.5px #ffe000;">
    <h1>Tribeleads</h1>
</div>
<div class="row art">
    @foreach (User user in tribeleads)
    {
        
        string profilePicture = "https://localhost:6001" + user.Image.RelativeUrl;
        //if (user.MemberOf[3].Role.Equals("TribeLead"))
        //{
        //if(user.tribe=viewdata)

        <div class="col-md-12 col-lg-4 col-sm-3">
            <div class="beep">
                <div class="card h-100 artikel">
                    <img src="@profilePicture" class="card-img-top" alt="...">
                    <div class="card-body info">
                        <h5 class="card-title Titel text-uppercase">@user.Name</h5>
                        <h5 class="card-text author"><i class="fa fa-pencil"></i>&nbsp; &nbsp;@user.Biography</h5>
                        <a href="@user.LinkedIn">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-linkedin" viewBox="0 0 16 16">
                                <path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z" />
                            </svg>&nbsp; &nbsp;LinkedIn
                        </a>
                    </div>
                </div>
            </div>
        </div>
        //}
        //}
    }
</div>

    @*@{string pdfurl = "https://localhost:6001/api/File/" + artikel.Attributes["pdf"] + "/retrieve"; }*@

    @*@{ string Imageurl = "https://localhost:6001" + Tribeso.Members[0].User.Image;}*@
<div class="container">

    @{artikelen = artikelen.OrderByDescending(x => x.CreatedAt).ToList();

        webinars = webinars.OrderByDescending(x => x.CreatedAt).ToList();}

    @if (artikelen.Count >= 3)
    {
        for (int q = 0; q < 3; q++)
        {

            if (artikelen[i].Type == 0)
            {
                if (artikelen[i].Tribe.Title == ViewData["ID"].ToString())
                {
                    if (artikelen[i].Status == 1 && artikelen[i].Type == 0 || artikelen[i].Status == 0 && artikelen[i].Type == 0)
                    {
                        drieartikelen.Add(artikelen[i]);
                    }
                }

                else
                {
                    q = q - 1;
                }


            }
            else
            {
                q = q - 1;

            }
            i++;
            if (i >= artikelen.Count)
            {
                break;
            }


        }
    }
    else
    {
        @for (int q = 0; q < artikelen.Count; q++)
        {

            if (artikelen[q].Type == 0)
            {
                if (artikelen[q].Tribe.Title == ViewData["ID"].ToString())
                {
                    if (artikelen[q].Status == 1 && artikelen[q].Type == 0 || artikelen[q].Status == 0 && artikelen[q].Type == 0)
                    {
                        drieartikelen.Add(artikelen[i]);
                    }
                }




            }

        }
    }
    @if (webinars.Count >= 3)
    {
        for (int y = 0; y < 3; y++)
        {

            if (webinars[w].Type == 1)
            {
                if (webinars[w].Tribe.Title == ViewData["ID"].ToString())
                {
                    if (webinars[w].Status == 1 && webinars[w].Type == 1 || webinars[w].Status == 0 && webinars[w].Type == 1)
                    {
                        driewebinars.Add(webinars[w]);
                    }
                }
                else
                {
                    y = y - 1;
                }


            }
            else
            {
                y = y - 1;

            }
            w++;
            if (w >= webinars.Count)
            {
                break;
            }


        }
    }
    else
    {
        for (int y = 0; y < webinars.Count; y++)
        {

            if (webinars[w].Type == 1)
            {
                if (webinars[w].Tribe.Title == ViewData["ID"].ToString())
                {
                    if (webinars[w].Status == 1 && webinars[w].Type == 1 || webinars[w].Status == 0 && webinars[w].Type == 1)
                    {
                        driewebinars.Add(webinars[w]);
                    }
                }

            }
        }
    }
    <div style="width: 100%; border-bottom: solid 2.5px #ffe000;">
        <h1>Artikelen</h1>
    </div>
    <div class="row art">
        @for (int g = 0; g < artikelen.Count; g++)
        {
            string Imageurl = "https://localhost:6001" + artikelen[g].Thumbnail.RelativeUrl;
            string artikeltitle = artikelen[g].Title;
            <div class="container">
                <div class="container">


                    <div class="row">

                        <div class="col-md-6">
                            <section class="widget">
                                <div class="widget-controls">
                                    <a asp-controller="Home" asp-action="Artikel" asp-route-title="@artikeltitle" target="_blank"><i class="fa fa-share" style="color:#ffe000"></i></a>
                                </div>
                                <div class="widget-body">
                                    <div class="widget-top-overflow text-white">
                                        <div class="article-title">@artikelen[g].Title</div>
                                        <a asp-controller="Home" asp-action="Artikel" asp-route-title="@artikeltitle"><img src="@Imageurl"></a>
                                        <ul class="tags text-black-50 pull-right">
                                            <li><a href="tribesearch1">@artikelen[g].Tribe.Title</a></li>
                                        </ul>
                                    </div>
                                    <div class="post-user mt-sm">
                                        <span class="thumb pull-left mr">
                                            <img class="rounded-circle" src="https://bootdey.com/img/Content/user_1.jpg" alt="...">
                                        </span>
                                        <h5 class="mb-xs mt-xs text-light"><span class="fw-semi-bold">@artikelen[g].Author.Name</span></h5>
                                        <p class="fs-mini text-muted"><span class="fs-mini text-muted"><i class="fa fa-tag"></i>&nbsp;Special agent</span></p>
                                    </div>
                                    <p class="text-light fs-mini m">
                                        @artikelen[g].Description
                                    </p>
                                    <input type="hidden" id="ArtikelId" value=@artikelen[g].Id>
                                </div>
                                <footer class="bg-body-light">
                                    <ul class="post-links">
                                        <li><i class="fa fa-calendar"></i><time>&nbsp;@artikelen[g].CreatedAt.ToString("dd-MM-yyyy")</time>&nbsp;</li>
                                        <li><i class="fa fa-hashtag"></i>&nbsp;Add some tags here</li>
                                    </ul>
                                </footer>
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        }
        <a class="row moreButton " style="width: 100%;" asp-area="" asp-action="ArtikelPagina" asp-controller="Home" asp-route-Tribe="@ViewData["ID"].ToString()">

            <h4>meer artikelen weergeven</h4>

        </a>
    </div>
    <div style="width: 100%; border-bottom: solid 2.5px #ffe000;">
        <h1>Webinars</h1>
    </div>
    <div class="row art">
        @foreach (TalkModel talk in driewebinars)
        {
            string thumbnailUrl = "https://localhost:6001" + talk.thumbnail.RelativeUrl;
            // na de || moet eigenijk weg omdat deze niet published zijn.

            <div class="container talk">
                <h1>@talk.title</h1>
                <div class="row talkMiddle">
                    <p class="talkDesc">@talk.description</p>
                    <img class="talkThumbnail" src="@thumbnailUrl" />
                </div>
                <div class="row talkBottom">
                    <h2 class="talkTribe">@talk.Tribe.Title</h2>
                </div>

            </div>
        }
        <a class="row moreButton" style="width:100%;" asp-area="" asp-action="OnDemand" asp-controller="Home" asp-route-Tribe="@ViewData["ID"].ToString()">

            <h4>Meer webinars weergeven</h4>

        </a>
    </div>
</div>

